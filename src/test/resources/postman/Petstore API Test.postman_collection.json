{
	"info": {
		"_postman_id": "58c17e63-89d5-4ac9-a661-724a799056de",
		"name": "Petstore API Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26974691",
		"_collection_link": "https://www.postman.com/cihatkose/workspace/mentoring-batch-7/collection/26974691-58c17e63-89d5-4ac9-a661-724a799056de?action=share&source=collection_link&creator=26974691"
	},
	"item": [
		{
			"name": "Get Pet by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Verify that the status code is 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Verify that the contents of the body contain the correct petId\r",
							"pm.test(\"Pet ID is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(2);\r",
							"});\r",
							"\r",
							"// Check if the response time is less than 200 ms\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet/2",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add a New Pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the response body\r",
							"const response = pm.response.json();\r",
							"\r",
							"// Test for status code\r",
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Test for response content type\r",
							"pm.test(\"Content-Type is application/json\", () => {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
							"});\r",
							"\r",
							"// Test for presence and type of required fields in response\r",
							"pm.test(\"Response contains required fields\", () => {\r",
							"    pm.expect(response).to.have.property(\"id\").that.is.a(\"number\");\r",
							"    pm.expect(response).to.have.property(\"category\").that.is.an(\"object\");\r",
							"    pm.expect(response.category).to.have.property(\"id\").that.is.a(\"number\");\r",
							"    pm.expect(response.category).to.have.property(\"name\").that.is.a(\"string\");\r",
							"    pm.expect(response).to.have.property(\"name\").that.is.a(\"string\");\r",
							"    pm.expect(response).to.have.property(\"photoUrls\").that.is.an(\"array\");\r",
							"    pm.expect(response).to.have.property(\"tags\").that.is.an(\"array\");\r",
							"    pm.expect(response).to.have.property(\"status\").that.is.a(\"string\");\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 100,\r\n  \"category\": {\r\n    \"id\": 1,\r\n    \"name\": \"Dogs\"\r\n  },\r\n  \"name\": \"Buddy\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 1,\r\n      \"name\": \"friendly\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Verify that the status code is 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"// Verify if Body content includes updated pet information\r",
							"pm.test(\"Pet status is updated correctly\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.status).to.eql(\"sold\"); // Updated status check\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 100,\r\n  \"category\": {\r\n    \"id\": 1,\r\n    \"name\": \"Dogs\"\r\n  },\r\n  \"name\": \"Buddy\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 1,\r\n      \"name\": \"trained\"\r\n    }\r\n  ],\r\n  \"status\": \"sold\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Verify that the status code is 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Check if it contains a successful message for deletion\r",
							"pm.test(\"Response contains successful deletion message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"100\"); // The deleted pet ID is expected to return as a message\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet/100",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet",
						"100"
					]
				}
			},
			"response": []
		}
	]
}